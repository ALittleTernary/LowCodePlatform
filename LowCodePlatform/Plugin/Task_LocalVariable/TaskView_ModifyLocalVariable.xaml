 <Window x:Class="LowCodePlatform.Plugin.Task_LocalVariable.TaskView_ModifyLocalVariable"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:LowCodePlatform.Plugin.Task_LocalVariable"
             mc:Ignorable="d" 
             Height="800" Width="1300">
    <Window.Resources>
        <Style x:Key="TreeViewItemFocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <PathGeometry x:Key="TreeArrow" Figures="M0,0 L0,6 L6,0 z"/>
        <Style x:Key="ExpandCollapseToggleStyle" TargetType="{x:Type ToggleButton}">
            <Setter Property="Focusable" Value="False"/>
            <Setter Property="Width" Value="16"/>
            <Setter Property="Height" Value="16"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Border Background="Transparent" Height="16" Padding="5,5,5,5" Width="16">
                            <Path x:Name="ExpandPath" Data="{StaticResource TreeArrow}" Fill="Transparent" Stroke="#FF989898">
                                <Path.RenderTransform>
                                    <RotateTransform Angle="135" CenterY="3" CenterX="3"/>
                                </Path.RenderTransform>
                            </Path>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Stroke" TargetName="ExpandPath" Value="#FF1BBBFA"/>
                                <Setter Property="Fill" TargetName="ExpandPath" Value="Transparent"/>
                            </Trigger>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter Property="RenderTransform" TargetName="ExpandPath">
                                    <Setter.Value>
                                        <RotateTransform Angle="180" CenterY="3" CenterX="3"/>
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="Fill" TargetName="ExpandPath" Value="#FF595959"/>
                                <Setter Property="Stroke" TargetName="ExpandPath" Value="#FF262626"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="StretchTreeViewItemStyle" TargetType="{x:Type TreeViewItem}" >
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
            <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
            <Setter Property="Padding" Value="1,0,0,0"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="FocusVisualStyle" Value="{StaticResource TreeViewItemFocusVisual}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TreeViewItem}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition MinWidth="19" Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition/>
                            </Grid.RowDefinitions>
                            <!-- Connecting Lines -->
                            <ToggleButton x:Name="Expander" ClickMode="Press" IsChecked="{Binding IsExpanded, RelativeSource={RelativeSource TemplatedParent}}" Style="{StaticResource ExpandCollapseToggleStyle}"/>
                            <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.Column="1" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
                                <ContentPresenter x:Name="PART_Header" ContentSource="Header" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            </Border>
                            <ItemsPresenter x:Name="ItemsHost" Grid.Column="1" Grid.Row="1"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsExpanded" Value="false">
                                <Setter Property="Visibility" TargetName="ItemsHost" Value="Collapsed"/>
                            </Trigger>
                            <Trigger Property="HasItems" Value="false">
                                <Setter Property="Visibility" TargetName="Expander" Value="Hidden"/>
                            </Trigger>
                            <Trigger Property="IsSelected" Value="true">
                                <Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"/>
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsSelected" Value="true"/>
                                    <Condition Property="IsSelectionActive" Value="false"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                            </MultiTrigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="VirtualizingStackPanel.IsVirtualizing" Value="true">
                    <Setter Property="ItemsPanel">
                        <Setter.Value>
                            <ItemsPanelTemplate>
                                <VirtualizingStackPanel/>
                            </ItemsPanelTemplate>
                        </Setter.Value>
                    </Setter>
                </Trigger>
            </Style.Triggers>
        </Style>
    </Window.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="1*" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>

        <Grid Grid.Row="0">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="2*" />
                <ColumnDefinition Width="5" />
                <ColumnDefinition Width="3*" />
            </Grid.ColumnDefinitions>

            <Grid Grid.Column="0">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="*" />
                </Grid.RowDefinitions>

                <Label Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="2" Content="数据来源"/>

                <Grid Grid.Row="1">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="5" />
                        <ColumnDefinition Width="2*" />
                    </Grid.ColumnDefinitions>

                    <TreeView x:Name="TreeView_Node"
                                  Grid.Column="0"  
                                  ItemContainerStyle="{StaticResource StretchTreeViewItemStyle}"/>

                    <!-- 分隔条 -->
                    <GridSplitter 
                            Grid.Column="1" 
                            Width="5" 
                            HorizontalAlignment="Stretch" 
                            VerticalAlignment="Stretch" 
                            ResizeDirection="Columns" 
                            Background="Transparent" />

                    <TabControl x:Name="TabControl_NodeOutput" 
                                    Grid.Column="2" 
                                    TabStripPlacement="Left"/>
                </Grid>


            </Grid>

            <!--分隔条-->
            <GridSplitter 
                Grid.Column="1" 
                Width="5" 
                HorizontalAlignment="Stretch" 
                VerticalAlignment="Stretch" 
                ResizeDirection="Columns" 
                Background="Transparent" />

            <Grid Grid.Column="2">
                <Grid.RowDefinitions>
                    <RowDefinition Height="3*" />
                    <RowDefinition Height="5" />
                    <RowDefinition Height="*" />
                    <RowDefinition Height="5" />
                    <RowDefinition Height="*" />
                </Grid.RowDefinitions>

                <Grid Grid.Row="0">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>

                    <Grid Grid.Row="0">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>

                        <Button x:Name="Button_AddItem" Content="添加" Margin="10" Grid.Column="0"/>
                        <Button x:Name="Button_SubItem" Content="删除" Margin="10" Grid.Column="1"/>
                        <Button x:Name="Button_MoveUp" Content="上移" Margin="10" Grid.Column="2"/>
                        <Button x:Name="Button_MoveDown" Content="下移" Margin="10" Grid.Column="3"/>
                    </Grid>

                    <GroupBox Grid.Row="1">
                        <DataGrid x:Name="DataGrid_Variable" 
                                  Grid.Row="1" 
                                  BorderThickness="0" 
                                  Background="Transparent"
                                  IsReadOnly="False"
                                  CanUserAddRows="False"
                                  CanUserSortColumns="False"
                                  AutoGenerateColumns="False"
                                  RowHeight="25">

                            <DataGrid.Columns>
                                <DataGridTextColumn 
                                    Header="序号" 
                                    IsReadOnly="True" 
                                    Binding="{Binding VariableNum}" 
                                    Width="Auto"/>
                                <DataGridTextColumn 
                                    Header="类型" 
                                    IsReadOnly="True" 
                                    Binding="{Binding VariableType}" 
                                    Width="Auto"/>
                                <DataGridTextColumn 
                                    Header="名称" 
                                    IsReadOnly="True" 
                                    Binding="{Binding VariableName}" 
                                    Width="Auto"/>
                                <DataGridTextColumn 
                                    Header="表达式" 
                                    IsReadOnly="True" 
                                    Binding="{Binding VariableExpression}" 
                                    Width="*"/>
                                <DataGridTextColumn 
                                    Header="备注" 
                                    IsReadOnly="True" 
                                    Binding="{Binding VariableTip}" 
                                    Width="Auto"/>
                                <DataGridTextColumn 
                                    Header="合规性" 
                                    IsReadOnly="True" 
                                    Binding="{Binding VariableStatus}" 
                                    Width="Auto"/>
                                <DataGridTextColumn 
                                    Header="结果" 
                                    IsReadOnly="True" 
                                    Binding="{Binding VariableResult}" 
                                    Width="Auto"/>
                            </DataGrid.Columns>
                        </DataGrid>
                    </GroupBox>
                </Grid>

                <!-- 分隔条 -->
                <GridSplitter 
                    Grid.Row="1" 
                    Height="5" 
                    HorizontalAlignment="Stretch" 
                    VerticalAlignment="Stretch" 
                    ResizeDirection="Rows" 
                    Background="Transparent" />

                <Grid Grid.Row="2">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="*" />
                    </Grid.RowDefinitions>

                    <Label Grid.Row="0" Content="表达式"/>

                    <TextBox x:Name="TextBox_Expression" 
                    AcceptsReturn="True"
                    Grid.Row="1"/>
                </Grid>

                <!-- 分隔条 -->
                <GridSplitter 
                    Grid.Row="3" 
                    Height="5" 
                    HorizontalAlignment="Stretch" 
                    VerticalAlignment="Stretch" 
                    ResizeDirection="Rows" 
                    Background="Transparent" />

                <Grid Grid.Row="4">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="*" />
                    </Grid.RowDefinitions>

                    <Label Grid.Row="0" Content="结果"/>

                    <TextBox x:Name="TextBox_Result" 
                    AcceptsReturn="True"
                    Grid.Row="1"/>
                </Grid>
            </Grid>


        </Grid>

        <Grid Grid.Row="1">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>

            <Button x:Name="Button_Execute" Grid.Column="1" Content="执行"  Margin="5,0,5,5" />
            <Button x:Name="Button_Confirm" Grid.Column="2" Content="确定" Margin="5,0,5,5"/>
        </Grid>
    </Grid>
</Window>
